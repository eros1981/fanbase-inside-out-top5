version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: fanbase_db
      POSTGRES_USER: fanbase_user
      POSTGRES_PASSWORD: fanbase_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U fanbase_user -d fanbase_db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Query Service
  query-service:
    build:
      context: ../query-service
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - DB_URL=postgres://fanbase_user:fanbase_password@postgres:5432/fanbase_db
      - HMAC_SECRET_SHARED=your_shared_hmac_secret_here
      - DEFAULT_TIMEZONE=America/New_York
      - PORT=3001
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ../sql:/app/sql:ro

  # Slack Bot
  slack-bot:
    build:
      context: ../slack-bot
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - SLACK_SIGNING_SECRET=your_slack_signing_secret_here
      - SLACK_BOT_TOKEN=xoxb-your_bot_token_here
      - SLACK_APP_TOKEN=xapp-your_app_token_here
      - ALLOWED_USERGROUP_ID=S123ABC
      - QUERY_SERVICE_URL=http://query-service:3001/api/top5
      - QUERY_SERVICE_HMAC_SECRET=your_shared_hmac_secret_here
      - DEFAULT_TIMEZONE=America/New_York
      - PORT=3000
    ports:
      - "3000:3000"
    depends_on:
      query-service:
        condition: service_started

volumes:
  postgres_data:
